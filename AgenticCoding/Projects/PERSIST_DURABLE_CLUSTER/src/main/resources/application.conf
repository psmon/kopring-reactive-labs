pekko {
  loglevel = "INFO"
  loggers = ["org.apache.pekko.event.slf4j.Slf4jLogger"]
  logging-filter = "org.apache.pekko.event.slf4j.Slf4jLoggingFilter"

  actor {
    provider = "cluster"
    
    serializers {
      jackson-json = "org.apache.pekko.serialization.jackson.JacksonJsonSerializer"
      jackson-cbor = "org.apache.pekko.serialization.jackson.JacksonCborSerializer"
      proto = "org.apache.pekko.remote.serialization.ProtobufSerializer"
    }

    serialization-bindings {
      "com.example.persistdurablecluster.model.PersistenceSerializable" = jackson-json
    }
    
    allow-java-serialization = on
  }

  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = []
    roles = ["shard"]
    
    downing-provider-class = "org.apache.pekko.cluster.sbr.SplitBrainResolverProvider"
    
    split-brain-resolver {
      active-strategy = "keep-majority"
      stable-after = 20s
    }
    
    sharding {
      number-of-shards = 100
      
      passivate-idle-entity-after = 30m
      
      role = "shard"
      
      remember-entities = off
      
      state-store-mode = "ddata"
      
      least-shard-allocation-strategy {
        rebalance-absolute-limit = 20
        rebalance-relative-limit = 0.1
      }
    }
  }

  persistence {
    state {
      plugin = "pekko.persistence.r2dbc.state"
    }

    r2dbc {
      dialect = "postgres"
      
      connection-factory {
        driver = "postgres"
        host = "localhost"
        port = 5433
        database = "persist_durable_cluster"
        user = "postgres"
        password = "postgres"
        
        max-pool-size = 10
        initial-size = 5
        max-idle-time = 30s
      }

      state {
        class = "org.apache.pekko.persistence.r2dbc.state.R2dbcDurableStateStoreProvider"
        table = "durable_state"
        assert-single-writer = on
      }
      
      query {
        refresh-interval = 3s
        max-buffer-size = 500
      }
    }
  }
  
  serialization-jackson {
    jackson-modules += "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule"
    jackson-modules += "org.apache.pekko.serialization.jackson.PekkoTypedJacksonModule"
    
    # Configure Jackson to handle ActorRef serialization properly
    type-in-manifest = on
    
    # Whitelist the classes for serialization
    whitelist-class-prefixes = [
      "com.example.persistdurablecluster"
    ]
  }
}
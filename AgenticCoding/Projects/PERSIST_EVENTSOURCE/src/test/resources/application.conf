pekko {
  loglevel = "INFO"
  loggers = ["org.apache.pekko.event.slf4j.Slf4jLogger"]
  logging-filter = "org.apache.pekko.event.slf4j.Slf4jLoggingFilter"
  
  actor {
    provider = "local"
    
    serializers {
      jackson-json = "org.apache.pekko.serialization.jackson.JacksonJsonSerializer"
    }
    
    serialization-bindings {
      "com.example.persisteventsource.model.PersistenceSerializable" = jackson-json
    }
  }
  
  persistence {
    journal {
      plugin = "pekko.persistence.r2dbc.journal"
    }
    
    snapshot-store {
      plugin = "pekko.persistence.r2dbc.snapshot"
    }
    
    state {
      plugin = "pekko.persistence.r2dbc.state"
    }
    
    r2dbc {
      connection-factory {
        driver = "postgres"
        host = "localhost"
        port = 5433
        database = "eventsource_db"
        user = "eventsource_user"
        password = "eventsource_pass"
        
        # Connection pool settings
        initial-size = 10
        max-size = 20
        max-idle-time = 30s
        max-life-time = 60m
      }
      
      journal {
        class = "org.apache.pekko.persistence.r2dbc.journal.R2dbcJournal"
        
        # Publish events for query side
        publish-events = on
      }
      
      snapshot {
        class = "org.apache.pekko.persistence.r2dbc.snapshot.R2dbcSnapshotStore"
      }
      
      state {
        class = "org.apache.pekko.persistence.r2dbc.state.R2dbcDurableStateStore"
      }
      
      query {
        class = "org.apache.pekko.persistence.r2dbc.query.R2dbcReadJournalProvider"
        
        # How often to poll for new events
        refresh-interval = 2s
        
        # Buffer size for streaming queries
        buffer-size = 100
      }
      
      # Cleanup settings for old snapshots and journal entries
      cleanup {
        # Keep only the latest 3 snapshots
        snapshot-keep = 3
        
        # Delete events older than this after successful snapshot
        journal-delete-older-than = 30d
      }
    }
  }
  
  serialization.jackson {
    # Enable type information for polymorphic serialization
    jackson-modules += "com.fasterxml.jackson.module.kotlin.KotlinModule"
    jackson-modules += "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule"
    
    # Whitelist for allowed classes
    allowed-class-patterns = [
      "com.example.persisteventsource.model.*",
      "java.time.*",
      "java.math.BigDecimal"
    ]
  }
}